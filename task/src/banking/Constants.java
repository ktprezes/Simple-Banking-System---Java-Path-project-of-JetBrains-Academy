package banking;

interface AccConst { // account related constants

    // the length of the whole card / account number
    // according to task description it has to have 16 digits

    int ACC_FULL_NUMBER_LEN = 16;

    // it consists of 3 parts:
    // IIN_STR - issuer identification number - 6 digits
    // CAN - customer account number - 9..12 digits - here: 9 digits
    // CS - checksum - 1 digit


    // Issuer Identification Number
    // prefix of every account number generated by our 'bank'
    // example values: '4*****' - Visa, '34****' or '37****' - AmEx,
    // '51****'..'55****' - MasterCard etc...
    // here - equals '400000' - according to the task description

    String IIN_STR = "400000";
    int ACC_IIN_LEN = IIN_STR.length(); // has to be = 6;


    // Customer Account Number Length - CAN itself has to be unique
    // according to task description the  whole card number has to have 16 digits
    // including 6-digit IIN_STR and 1 digit 'checksum'
    // therefore CAN length is always 9 digits here

    int ACC_CHECKSUM_LEN = 1; // checksum is one-digit number
    int ACC_CAN_LEN = ACC_FULL_NUMBER_LEN - ACC_IIN_LEN - ACC_CHECKSUM_LEN; // = 9


    // used eg. in String.format() method requires 2 args to work:
    // the 'int can' number (individual customer account number
    // and 'int cs' (checksum number)
    // should generate output String representing 16-digit 'full account number'

    String ACC_FULL_NO_2ARG_FORMAT_STRING = IIN_STR + "%0" + ACC_CAN_LEN + "d%0" + ACC_CHECKSUM_LEN + "d";

    // some 'silent assumptions' has been made:
    // the length of IIN_STR, PIN and CHECKSUM numbers will not exceed 9 digits (6 in fact),
    // therefore the 'Integer' type will be sufficient for their numerical representations

    // ACC_FULL_NUMBER with it's length of 16 digits will have 'String' representation ONLY
    // but
    // ACC_CAN (customer account number), which length can be in the range of 9..12 digits (inclusive)
    // in some cases it may be of the "Integer" type and in the others of the "Long" type

    // the task description suggests the whole card number should have 16 digits
    // therefore the CAN part should have 9 digits: 16 - 6 (IIS_LEN) - 1 (CHECKSUM_LEN)
    // thus I'll use 'Integer' as a data type for individual CAN number
    // (yes, I do miss C/C++ typedef here...)


    // min number that can be assigned to the account (inclusive)
    // we do suppress creating accounts with number '0' (zero)

    int ACC_NO_MIN_BOUND = 1;


    // max value that can be assigned to the account number (exclusive)
    // because the longest account number has 9 digits (see above)
    // thus max acc bound is < 10^ACC_CAN_LEN

    int ACC_NO_MAX_BOUND = (int) Math.pow(10, ACC_CAN_LEN);


    // the length (in digits) of 'PIN' number

    int PIN_LEN = 4;


    // value inclusive - just like for the account number
    // we don't allow to create pin numbers with '0' (zero) value

    int PIN_NO_MIN_BOUND = 1;


    // max pin bound (exclusive)

    int PIN_NO_MAX_BOUND = (int) Math.pow(10, PIN_LEN);

} // interface AccConst


interface AppConst { // application related constants

    // the higher DEBUG_LVL is
    // the more verbose this application is
    // DEBUG_LVL == 0 means 'no debug info'

    int DEBUG_LVL = 0;


    // when 'true' every console input and output is recorded into:
    // static ArrayList<String> log = new ArrayList<>();

    boolean DO_LOG = false;

    String MSG_DELIM = "\"";

    // as of stage#3 of the project we introduce SQLite db support
    // with a file name given as a command line parameter
    // this default name will be used in case
    // the CLI parameter will be missing
    // in case we won't be able to create/open the DB file
    // using both names - CLI and the default one
    // the application will terminate
    //
    String DB_FILE_DEF_NAME = "SimpleBankingDB.s3db";

    String MAIN_MENU_STR =
            "\n1. Create an account"
          + "\n2. Log into account"
          + "\n0. Exit";

    String ACC_SUBMENU_STR =
            "\n1. Balance"
          + "\n2. Log out"
          + "\n0.Exit";


} // interface AppConst
